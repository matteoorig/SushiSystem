{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport { StatusBar } from 'expo-status-bar';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Cabin_400Regular } from '@expo-google-fonts/cabin';\nimport { AntDesign } from '@expo/vector-icons';\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport WrapperTutorial from \"../components/wrapperTutorial\";\nimport Page2text from \"../components/page2text\";\nimport Mslider from \"../components/sliderState\";\nimport { useEffect, useRef, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Tutorial2 = function Tutorial2(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      tutorialState = _useState2[0],\n      setTutorialState = _useState2[1];\n\n  var loopAnim = new Animated.Value(0);\n\n  function checkState() {\n    switch (tutorialState) {\n      case 0:\n        setTutorialState(1);\n        break;\n\n      case 1:\n        setTutorialState(2);\n        break;\n\n      case 2:\n        setTutorialState(0);\n        break;\n    }\n  }\n\n  var configGesture = {\n    velocityThreshold: 0,\n    directionalOffsetThreshold: 80\n  };\n  useEffect(function () {\n    Animated.loop(Animated.sequence([Animated.delay(3000), Animated.timing(_this.state.width, {\n      toValue: 400,\n      duration: 2000\n    })]), {\n      iterations: 10\n    }).start();\n  }, []);\n\n  var _useFonts = useFonts({\n    Cabin_400Regular: Cabin_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsxs(ImageBackground, {\n      style: {\n        height: '100%',\n        position: 'relative',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      blurRadius: 3,\n      source: require(\"../img/sushiBack.jpg\"),\n      children: [_jsx(View, {\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundColor: 'black',\n          opacity: 0.6\n        }\n      }), _jsx(WrapperTutorial, {\n        width: 310,\n        height: 543,\n        position: 'relative'\n      }), tutorialState == 0 ? _jsx(Page2text, {\n        width: '100%',\n        position: 'absolute',\n        top: 150\n      }) : _jsx(View, {}), tutorialState == 0 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 80,\n        animateFrom: 0\n      }) : _jsx(View, {}), tutorialState == 1 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 180,\n        animateFrom: 80\n      }) : _jsx(View, {}), tutorialState == 2 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 280,\n        animateFrom: 180\n      }) : _jsx(View, {}), _jsx(GestureRecognizer, {\n        config: configGesture,\n        onSwipeLeft: function onSwipeLeft() {\n          return checkState();\n        },\n        style: {\n          width: '100%',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            position: 'relative',\n            transform: [{\n              translateY: translateY\n            }]\n          },\n          children: [_jsx(Image, {\n            source: require(\"../img/manoSwipe.png\"),\n            style: {\n              height: 70,\n              width: 70,\n              resizeMode: 'contain',\n              marginTop: 50\n            }\n          }), _jsx(AntDesign, {\n            name: \"doubleleft\",\n            size: 24,\n            color: \"white\",\n            style: {\n              position: 'absolute',\n              top: 40,\n              left: -10\n            }\n          })]\n        })\n      })]\n    });\n  }\n};\n\nexport default Tutorial2;","map":{"version":3,"sources":["/Users/matteooriggi/SushiSystem/app/pages/Tutorial2.js"],"names":["StatusBar","AppLoading","useFonts","Cabin_400Regular","AntDesign","GestureRecognizer","swipeDirections","WrapperTutorial","Page2text","Mslider","useEffect","useRef","useState","Tutorial2","props","tutorialState","setTutorialState","loopAnim","Animated","Value","checkState","configGesture","velocityThreshold","directionalOffsetThreshold","loop","sequence","delay","timing","state","width","toValue","duration","iterations","start","fontsLoaded","height","position","justifyContent","alignItems","require","backgroundColor","opacity","transform","translateY","resizeMode","marginTop","top","left"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SACIC,QADJ,EAEIC,gBAFJ,QAGO,0BAHP;AAIA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,iBAAP,IAA2BC,eAA3B,QAAiD,6BAAjD;AAGA,OAAOC,eAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAU;AAExB,kBAA0CF,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAjB;;AAEA,WAASC,UAAT,GAAqB;AACjB,YAAQL,aAAR;AACI,WAAK,CAAL;AACIC,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACA;AATR;AAWH;;AAED,MAAMK,aAAa,GAAG;AAClBC,IAAAA,iBAAiB,EAAE,CADD;AAElBC,IAAAA,0BAA0B,EAAE;AAFV,GAAtB;AAKAb,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,CAACM,IAAT,CACIN,QAAQ,CAACO,QAAT,CAAkB,CAChBP,QAAQ,CAACQ,KAAT,CAAe,IAAf,CADgB,EAEhBR,QAAQ,CAACS,MAAT,CAAgB,KAAI,CAACC,KAAL,CAAWC,KAA3B,EAAkC;AAChCC,MAAAA,OAAO,EAAE,GADuB;AAEhCC,MAAAA,QAAQ,EAAE;AAFsB,KAAlC,CAFgB,CAAlB,CADJ,EAQI;AACEC,MAAAA,UAAU,EAAE;AADd,KARJ,EAWIC,KAXJ;AAYD,GAbM,EAaJ,EAbI,CAAT;;AAkBA,kBAAoB/B,QAAQ,CAAC;AACzBC,IAAAA,gBAAgB,EAAhBA;AADyB,GAAD,CAA5B;AAAA;AAAA,MAAK+B,WAAL;;AAGA,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,KAAC,UAAD,KAAP;AACH,GAFD,MAEO;AACP,WACI,MAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,QAAQ,EAAC,UAAzB;AAAqCC,QAAAA,cAAc,EAAC,QAApD;AAA8DC,QAAAA,UAAU,EAAC;AAAzE,OAAxB;AAA4G,MAAA,UAAU,EAAE,CAAxH;AAA2H,MAAA,MAAM,EAAEC,OAAO,wBAA1I;AAAA,iBACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACV,UAAAA,KAAK,EAAC,MAAP;AAAeM,UAAAA,MAAM,EAAC,MAAtB;AAA6BC,UAAAA,QAAQ,EAAC,UAAtC;AAAkDI,UAAAA,eAAe,EAAC,OAAlE;AAA2EC,UAAAA,OAAO,EAAC;AAAnF;AAAb,QADA,EAEI,KAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,GAAxB;AAA6B,QAAA,MAAM,EAAE,GAArC;AAA0C,QAAA,QAAQ,EAAE;AAApD,QAFJ,EAIK1B,aAAa,IAAI,CAAjB,GAAsB,KAAC,SAAD;AAAW,QAAA,KAAK,EAAE,MAAlB;AAA0B,QAAA,QAAQ,EAAE,UAApC;AAAgD,QAAA,GAAG,EAAE;AAArD,QAAtB,GAAsF,KAAC,IAAD,KAJ3F,EAQKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,EAAvC;AAA2C,QAAA,WAAW,EAAE;AAAxD,QAAtB,GAAqF,KAAC,IAAD,KAR1F,EASKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,GAAvC;AAA4C,QAAA,WAAW,EAAE;AAAzD,QAAtB,GAAuF,KAAC,IAAD,KAT5F,EAUKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,GAAvC;AAA4C,QAAA,WAAW,EAAE;AAAzD,QAAtB,GAAwF,KAAC,IAAD,KAV7F,EAWI,KAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEM,aAA3B;AAA0C,QAAA,WAAW,EAAE;AAAA,iBAAID,UAAU,EAAd;AAAA,SAAvD;AAAyE,QAAA,KAAK,EAAE;AAACS,UAAAA,KAAK,EAAC,MAAP;AAAeQ,UAAAA,cAAc,EAAC,QAA9B;AAAwCC,UAAAA,UAAU,EAAC;AAAnD,SAAhF;AAAA,kBACI,MAAC,QAAD,CAAU,IAAV;AAAgB,UAAA,KAAK,EAAE;AAACF,YAAAA,QAAQ,EAAC,UAAV;AAAsBM,YAAAA,SAAS,EAAC,CAAC;AAACC,cAAAA,UAAU,EAAVA;AAAD,aAAD;AAAhC,WAAvB;AAAA,qBACI,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEJ,OAAO,wBAAtB;AAAgD,YAAA,KAAK,EAAE;AAACJ,cAAAA,MAAM,EAAC,EAAR;AAAYN,cAAAA,KAAK,EAAC,EAAlB;AAAsBe,cAAAA,UAAU,EAAC,SAAjC;AAA4CC,cAAAA,SAAS,EAAC;AAAtD;AAAvD,YADJ,EAEI,KAAC,SAAD;AAAW,YAAA,IAAI,EAAC,YAAhB;AAA6B,YAAA,IAAI,EAAE,EAAnC;AAAuC,YAAA,KAAK,EAAC,OAA7C;AAAqD,YAAA,KAAK,EAAE;AAACT,cAAAA,QAAQ,EAAC,UAAV;AAAsBU,cAAAA,GAAG,EAAC,EAA1B;AAA8BC,cAAAA,IAAI,EAAC,CAAC;AAApC;AAA5D,YAFJ;AAAA;AADJ,QAXJ;AAAA,MADJ;AAsBC;AACJ,CAvED;;AA2EA,eAAelC,SAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { ImageBackground, StyleSheet, Text, View , Image, TouchableWithoutFeedback, Animated} from 'react-native';\nimport AppLoading from 'expo-app-loading'; //expo install expo-app-loading\nimport {\n    useFonts,\n    Cabin_400Regular,\n} from '@expo-google-fonts/cabin';\nimport { AntDesign } from '@expo/vector-icons'; \nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\n\n\nimport WrapperTutorial from \"../components/wrapperTutorial\";\nimport Page2text from '../components/page2text';\nimport Mslider from '../components/sliderState';\nimport { useEffect, useRef, useState } from 'react';\n\n\n\n\n\nconst Tutorial2 = (props) =>{\n\n    const [tutorialState, setTutorialState] = useState(0);\n    const loopAnim = new Animated.Value(0);\n\n    function checkState(){\n        switch (tutorialState) {\n            case 0:\n                setTutorialState(1);\n                break;\n            case 1:\n                setTutorialState(2);\n                break;\n            case 2:\n                setTutorialState(0);\n                break;\n          }\n    }\n\n    const configGesture = {\n        velocityThreshold: 0,\n        directionalOffsetThreshold: 80\n    };\n\n    useEffect(() => {\n        Animated.loop(\n            Animated.sequence([\n              Animated.delay(3000),\n              Animated.timing(this.state.width, {\n                toValue: 400,\n                duration: 2000\n              })\n            ]),\n            {\n              iterations: 10\n            }\n          ).start()\n      }, []);\n\n      \n    \n\n    let [fontsLoaded] = useFonts({\n        Cabin_400Regular,\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    } else {\n    return(\n        <ImageBackground style={{height:'100%', position:'relative', justifyContent:'center', alignItems:'center'}} blurRadius={3} source={require('../img/sushiBack.jpg')}>\n        <View style={{width:'100%', height:'100%',position:'absolute', backgroundColor:'black', opacity:0.6}}></View>\n            <WrapperTutorial width={310} height={543} position={'relative'}/>\n\n            {tutorialState == 0 ? (<Page2text width={'100%'} position={'absolute'} top={150}/>) : (<View></View>)}\n            \n\n\n            {tutorialState == 0 ? (<Mslider width={310} height={4} state={80} animateFrom={0}/>):(<View></View>)}\n            {tutorialState == 1 ? (<Mslider width={310} height={4} state={180} animateFrom={80}/>):(<View></View>)}\n            {tutorialState == 2 ? (<Mslider width={310} height={4} state={280} animateFrom={180}/>):(<View></View>)}\n            <GestureRecognizer config={configGesture} onSwipeLeft={()=>checkState()} style={{width:'100%', justifyContent:'center', alignItems:'center'}}>\n                <Animated.View  style={{position:'relative', transform:[{translateY}]}}>\n                    <Image source={require('../img/manoSwipe.png')} style={{height:70, width:70, resizeMode:'contain', marginTop:50}}/>\n                    <AntDesign name=\"doubleleft\" size={24} color=\"white\" style={{position:'absolute', top:40, left:-10}}/>\n                </Animated.View>\n            </GestureRecognizer>\n            \n\n        </ImageBackground>\n    );\n    }\n}\n\n\n\nexport default Tutorial2;"]},"metadata":{},"sourceType":"module"}