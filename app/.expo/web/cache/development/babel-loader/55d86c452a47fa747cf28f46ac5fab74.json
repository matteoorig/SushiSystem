{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Cabin_400Regular } from '@expo-google-fonts/cabin';\nimport { AntDesign } from '@expo/vector-icons';\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport WrapperTutorial from \"../components/wrapperTutorial\";\nimport Page2text from \"../components/page2text\";\nimport Page3text from \"../components/page3text\";\nimport Page4text from \"../components/page4text\";\nimport Mslider from \"../components/sliderState\";\nimport { useEffect, useRef, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar configGesture = {\n  velocityThreshold: 0,\n  directionalOffsetThreshold: 80\n};\n\nvar navigateToNew = function navigateToNew(props) {\n  props.navigation.navigate('Tutorial2');\n};\n\nvar Tutorial2 = function Tutorial2(props) {\n  var client = new W3CWebSocket('ws://localhost:8888');\n  useEffect(function () {\n    client.onopen = function () {\n      var obj = {\n        'cmd': \"client\"\n      };\n      client.send(obj);\n    };\n\n    client.onmessage = function (message) {\n      var result = JSON.stringify(message.data);\n      var command = result.split(';');\n    };\n\n    client.onerror = function () {\n      console.log('Connection Error');\n    };\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      tutorialState = _useState2[0],\n      setTutorialState = _useState2[1];\n\n  function checkState() {\n    switch (tutorialState) {\n      case 0:\n        console.log(\"si gode\");\n        setTutorialState(1);\n        break;\n\n      case 1:\n        setTutorialState(2);\n        break;\n\n      case 2:\n        setTutorialState(0);\n        break;\n    }\n  }\n\n  var _useFonts = useFonts({\n    Cabin_400Regular: Cabin_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsxs(ImageBackground, {\n      style: {\n        height: '100%',\n        position: 'relative',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      blurRadius: 3,\n      source: require(\"../img/sushiBack.jpg\"),\n      children: [_jsx(View, {\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundColor: 'black',\n          opacity: 0.6\n        }\n      }), tutorialState == 0 ? _jsx(WrapperTutorial, {\n        width: 310,\n        height: 543,\n        position: 'relative'\n      }) : null, tutorialState == 1 ? _jsx(WrapperTutorial, {\n        width: 310,\n        height: 543,\n        position: 'relative'\n      }) : null, tutorialState == 2 ? _jsx(WrapperTutorial, {\n        width: 310,\n        height: 543,\n        position: 'relative'\n      }) : null, tutorialState == 0 ? _jsx(Page2text, {\n        width: '100%',\n        position: 'absolute',\n        top: 200\n      }) : _jsx(View, {}), tutorialState == 1 ? _jsx(Page3text, {\n        width: '100%',\n        position: 'absolute',\n        top: 200\n      }) : _jsx(View, {}), tutorialState == 2 ? _jsx(Page4text, {\n        width: '100%',\n        position: 'absolute',\n        height: 543,\n        top: 135\n      }) : _jsx(View, {}), tutorialState == 0 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 80,\n        animateFrom: 0\n      }) : _jsx(View, {}), tutorialState == 1 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 180,\n        animateFrom: 80\n      }) : _jsx(View, {}), tutorialState == 2 ? _jsx(Mslider, {\n        width: 310,\n        height: 4,\n        state: 280,\n        animateFrom: 180\n      }) : _jsx(View, {}), _jsx(GestureRecognizer, {\n        config: configGesture,\n        onSwipeLeft: function onSwipeLeft() {\n          return checkState();\n        },\n        style: {\n          width: '100%',\n          height: '95%',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          position: 'absolute'\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            position: 'relative'\n          },\n          children: [_jsx(Image, {\n            source: require(\"../img/manoSwipe.png\"),\n            style: {\n              height: 70,\n              width: 70,\n              resizeMode: 'contain',\n              marginTop: 50\n            }\n          }), _jsx(AntDesign, {\n            name: \"doubleleft\",\n            size: 24,\n            color: \"white\",\n            style: {\n              position: 'absolute',\n              top: 40,\n              left: -10\n            }\n          })]\n        })\n      }), _jsx(TextInput, {\n        style: {\n          width: 250,\n          height: 45,\n          fontSize: 25,\n          color: 'white',\n          fontFamily: 'Antic_400Regular'\n        },\n        placeholder: \"N\\xB0 tavolo\",\n        placeholderTextColor: \"#FFFFFF\"\n      })]\n    });\n  }\n};\n\nexport default Tutorial2;","map":{"version":3,"sources":["/Users/matteooriggi/SushiSystem/app/pages/Tutorial2.js"],"names":["StatusBar","AppLoading","useFonts","Cabin_400Regular","AntDesign","GestureRecognizer","swipeDirections","w3cwebsocket","W3CWebSocket","WrapperTutorial","Page2text","Page3text","Page4text","Mslider","useEffect","useRef","useState","configGesture","velocityThreshold","directionalOffsetThreshold","navigateToNew","props","navigation","navigate","Tutorial2","client","onopen","obj","send","onmessage","message","result","JSON","stringify","data","command","split","onerror","console","log","tutorialState","setTutorialState","checkState","fontsLoaded","height","position","justifyContent","alignItems","require","width","backgroundColor","opacity","resizeMode","marginTop","top","left","fontSize","color","fontFamily"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SACIC,QADJ,EAEIC,gBAFJ,QAGO,0BAHP;AAIA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,iBAAP,IAA2BC,eAA3B,QAAiD,6BAAjD;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AAGA,OAAOC,eAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,OAAP;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAGA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,iBAAiB,EAAE,CADD;AAElBC,EAAAA,0BAA0B,EAAE;AAFV,CAAtB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAU;AAC5BA,EAAAA,KAAK,CAACC,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B;AACH,CAFD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACH,KAAD,EAAU;AACxB,MAAMI,MAAM,GAAG,IAAIjB,YAAJ,CAAiB,qBAAjB,CAAf;AACAM,EAAAA,SAAS,CAAC,YAAI;AAEVW,IAAAA,MAAM,CAACC,MAAP,GAAgB,YAAM;AAClB,UAAMC,GAAG,GAAG;AACR,eAAO;AADC,OAAZ;AAGAF,MAAAA,MAAM,CAACG,IAAP,CAAYD,GAAZ;AACH,KALD;;AAOAF,IAAAA,MAAM,CAACI,SAAP,GAAmB,UAACC,OAAD,EAAa;AAC5B,UAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAO,CAACI,IAAvB,CAAf;AACA,UAAMC,OAAO,GAAGJ,MAAM,CAACK,KAAP,CAAa,GAAb,CAAhB;AAEH,KAJD;;AAKAX,IAAAA,MAAM,CAACY,OAAP,GAAiB,YAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEH,KAHD;AAKH,GAnBQ,CAAT;;AAoBA,kBAA0CvB,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOwB,aAAP;AAAA,MAAsBC,gBAAtB;;AAIA,WAASC,UAAT,GAAqB;AACjB,YAAQF,aAAR;AACI,WAAK,CAAL;AAGIF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAE,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AAGA;;AACJ,WAAK,CAAL;AACIA,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACA;AAdR;AAgBH;;AAID,kBAAoBvC,QAAQ,CAAC;AACzBC,IAAAA,gBAAgB,EAAhBA;AADyB,GAAD,CAA5B;AAAA;AAAA,MAAKwC,WAAL;;AAGA,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,KAAC,UAAD,KAAP;AACH,GAFD,MAEO;AACP,WACI,MAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,QAAQ,EAAC,UAAzB;AAAqCC,QAAAA,cAAc,EAAC,QAApD;AAA8DC,QAAAA,UAAU,EAAC;AAAzE,OAAxB;AAA4G,MAAA,UAAU,EAAE,CAAxH;AAA2H,MAAA,MAAM,EAAEC,OAAO,wBAA1I;AAAA,iBACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,MAAP;AAAeL,UAAAA,MAAM,EAAC,MAAtB;AAA6BC,UAAAA,QAAQ,EAAC,UAAtC;AAAkDK,UAAAA,eAAe,EAAC,OAAlE;AAA2EC,UAAAA,OAAO,EAAC;AAAnF;AAAb,QADA,EAEKX,aAAa,IAAI,CAAjB,GAAsB,KAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,GAAxB;AAA6B,QAAA,MAAM,EAAE,GAArC;AAA0C,QAAA,QAAQ,EAAE;AAApD,QAAtB,GAA2F,IAFhG,EAGKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,GAAxB;AAA6B,QAAA,MAAM,EAAE,GAArC;AAA0C,QAAA,QAAQ,EAAE;AAApD,QAAtB,GAA2F,IAHhG,EAIKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,GAAxB;AAA6B,QAAA,MAAM,EAAE,GAArC;AAA0C,QAAA,QAAQ,EAAE;AAApD,QAAtB,GAA2F,IAJhG,EAMKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,SAAD;AAAW,QAAA,KAAK,EAAE,MAAlB;AAA0B,QAAA,QAAQ,EAAE,UAApC;AAAgD,QAAA,GAAG,EAAE;AAArD,QAAtB,GAAuF,KAAC,IAAD,KAN5F,EAOKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,SAAD;AAAW,QAAA,KAAK,EAAE,MAAlB;AAA0B,QAAA,QAAQ,EAAE,UAApC;AAAgD,QAAA,GAAG,EAAE;AAArD,QAAtB,GAAuF,KAAC,IAAD,KAP5F,EAQKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,SAAD;AAAW,QAAA,KAAK,EAAE,MAAlB;AAA0B,QAAA,QAAQ,EAAE,UAApC;AAAgD,QAAA,MAAM,EAAE,GAAxD;AAA6D,QAAA,GAAG,EAAE;AAAlE,QAAtB,GAAoG,KAAC,IAAD,KARzG,EAWKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,EAAvC;AAA2C,QAAA,WAAW,EAAE;AAAxD,QAAtB,GAAqF,KAAC,IAAD,KAX1F,EAYKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,GAAvC;AAA4C,QAAA,WAAW,EAAE;AAAzD,QAAtB,GAAuF,KAAC,IAAD,KAZ5F,EAaKA,aAAa,IAAI,CAAjB,GAAsB,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE,GAAhB;AAAqB,QAAA,MAAM,EAAE,CAA7B;AAAgC,QAAA,KAAK,EAAE,GAAvC;AAA4C,QAAA,WAAW,EAAE;AAAzD,QAAtB,GAAwF,KAAC,IAAD,KAb7F,EAcI,KAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEvB,aAA3B;AAA0C,QAAA,WAAW,EAAE;AAAA,iBAAIyB,UAAU,EAAd;AAAA,SAAvD;AAAyE,QAAA,KAAK,EAAE;AAACO,UAAAA,KAAK,EAAC,MAAP;AAAeL,UAAAA,MAAM,EAAC,KAAtB;AAA6BE,UAAAA,cAAc,EAAC,UAA5C;AAAwDC,UAAAA,UAAU,EAAC,QAAnE;AAA6EF,UAAAA,QAAQ,EAAC;AAAtF,SAAhF;AAAA,kBACI,MAAC,QAAD,CAAU,IAAV;AAAgB,UAAA,KAAK,EAAE;AAACA,YAAAA,QAAQ,EAAC;AAAV,WAAvB;AAAA,qBACI,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEG,OAAO,wBAAtB;AAAgD,YAAA,KAAK,EAAE;AAACJ,cAAAA,MAAM,EAAC,EAAR;AAAYK,cAAAA,KAAK,EAAC,EAAlB;AAAsBG,cAAAA,UAAU,EAAC,SAAjC;AAA4CC,cAAAA,SAAS,EAAC;AAAtD;AAAvD,YADJ,EAEI,KAAC,SAAD;AAAW,YAAA,IAAI,EAAC,YAAhB;AAA6B,YAAA,IAAI,EAAE,EAAnC;AAAuC,YAAA,KAAK,EAAC,OAA7C;AAAqD,YAAA,KAAK,EAAE;AAACR,cAAAA,QAAQ,EAAC,UAAV;AAAsBS,cAAAA,GAAG,EAAC,EAA1B;AAA8BC,cAAAA,IAAI,EAAC,CAAC;AAApC;AAA5D,YAFJ;AAAA;AADJ,QAdJ,EAqBI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACN,UAAAA,KAAK,EAAC,GAAP;AAAYL,UAAAA,MAAM,EAAC,EAAnB;AAAuBY,UAAAA,QAAQ,EAAC,EAAhC;AAAoCC,UAAAA,KAAK,EAAC,OAA1C;AAAmDC,UAAAA,UAAU,EAAC;AAA9D,SAAlB;AAAqG,QAAA,WAAW,EAAC,cAAjH;AAA6H,QAAA,oBAAoB,EAAC;AAAlJ,QArBJ;AAAA,MADJ;AA2BC;AACJ,CAjFD;;AAqFA,eAAelC,SAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\n\nimport { ImageBackground, StyleSheet, Text, View , Image, TouchableWithoutFeedback, Animated, TextInput} from 'react-native';\nimport AppLoading from 'expo-app-loading'; //expo install expo-app-loading\nimport {\n    useFonts,\n    Cabin_400Regular,\n} from '@expo-google-fonts/cabin';\nimport { AntDesign } from '@expo/vector-icons'; \nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\n\nimport WrapperTutorial from \"../components/wrapperTutorial\";\nimport Page2text from '../components/page2text';\nimport Page3text from '../components/page3text';\nimport Page4text from '../components/page4text';\n\nimport Mslider from '../components/sliderState';\nimport { useEffect, useRef, useState } from 'react';\n\n\nconst configGesture = {\n    velocityThreshold: 0,\n    directionalOffsetThreshold: 80\n};\n\nconst navigateToNew = (props) =>{\n    props.navigation.navigate('Tutorial2');\n}\n\n\n\nconst Tutorial2 = (props) =>{\n    const client = new W3CWebSocket('ws://localhost:8888');\n    useEffect(()=>{\n      \n        client.onopen = () => {\n            const obj = {\n                'cmd': \"client\"\n            }\n            client.send(obj);\n        };\n    \n        client.onmessage = (message) => {\n            const result = JSON.stringify(message.data);\n            const command = result.split(';');\n            \n        };\n        client.onerror = function() {\n            console.log('Connection Error');\n            //qui c'è da mettere un popup che dica che\n        };\n    \n    })\n    const [tutorialState, setTutorialState] = useState(0);\n\n\n\n    function checkState(){\n        switch (tutorialState) {\n            case 0:\n                //esce prima\n\n                console.log(\"si gode\")\n                setTutorialState(1);\n\n                //entra l'altra\n                break;\n            case 1:\n                setTutorialState(2);\n                break;\n            case 2:\n                setTutorialState(0);\n                break;\n          }\n    }\n\n\n\n    let [fontsLoaded] = useFonts({\n        Cabin_400Regular,\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    } else {\n    return(\n        <ImageBackground style={{height:'100%', position:'relative', justifyContent:'center', alignItems:'center'}} blurRadius={3} source={require('../img/sushiBack.jpg')}>\n        <View style={{width:'100%', height:'100%',position:'absolute', backgroundColor:'black', opacity:0.6}}></View>\n            {tutorialState == 0 ? (<WrapperTutorial width={310} height={543} position={'relative'} />):(null)}\n            {tutorialState == 1 ? (<WrapperTutorial width={310} height={543} position={'relative'} />):(null)}\n            {tutorialState == 2 ? (<WrapperTutorial width={310} height={543} position={'relative'} />):(null)}\n\n            {tutorialState == 0 ? (<Page2text width={'100%'} position={'absolute'} top={200} />) : (<View></View>)}\n            {tutorialState == 1 ? (<Page3text width={'100%'} position={'absolute'} top={200} />) : (<View></View>)}\n            {tutorialState == 2 ? (<Page4text width={'100%'} position={'absolute'} height={543} top={135} />) : (<View></View>)}\n\n\n            {tutorialState == 0 ? (<Mslider width={310} height={4} state={80} animateFrom={0}/>):(<View></View>)}\n            {tutorialState == 1 ? (<Mslider width={310} height={4} state={180} animateFrom={80}/>):(<View></View>)}\n            {tutorialState == 2 ? (<Mslider width={310} height={4} state={280} animateFrom={180}/>):(<View></View>)}\n            <GestureRecognizer config={configGesture} onSwipeLeft={()=>checkState()} style={{width:'100%', height:'95%', justifyContent:'flex-end', alignItems:'center', position:'absolute'}}>\n                <Animated.View  style={{position:'relative'}}>\n                    <Image source={require('../img/manoSwipe.png')} style={{height:70, width:70, resizeMode:'contain', marginTop:50}}/>\n                    <AntDesign name=\"doubleleft\" size={24} color=\"white\" style={{position:'absolute', top:40, left:-10}}/>\n                </Animated.View>\n            </GestureRecognizer>\n            \n            <TextInput style={{width:250, height:45, fontSize:25, color:'white', fontFamily:'Antic_400Regular'}} placeholder=\"N° tavolo\" placeholderTextColor='#FFFFFF' />\n                \n\n        </ImageBackground>\n    );\n    }\n}\n\n\n\nexport default Tutorial2;"]},"metadata":{},"sourceType":"module"}