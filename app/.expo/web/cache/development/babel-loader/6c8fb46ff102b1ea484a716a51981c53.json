{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Svg, { Path } from 'react-native-svg';\nimport AppLoading from 'expo-app-loading';\nimport { Ionicons, AntDesign } from '@expo/vector-icons';\nimport { useState, useEffect } from 'react';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useFonts, Antic_400Regular } from '@expo-google-fonts/antic';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DeleteItem = function DeleteItem() {\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(\"row\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statoFlex = _useState4[0],\n      setstatoFlex = _useState4[1];\n\n  var _useState5 = useState(\"center\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statoFlexAlign = _useState6[0],\n      setstatoFlexAlign = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cambioTocco = _useState8[0],\n      setcambioTocco = _useState8[1];\n\n  var _useState9 = useState(20),\n      _useState10 = _slicedToArray(_useState9, 2),\n      marginCounter = _useState10[0],\n      setmarginCounter = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      marginCounterDiv = _useState12[0],\n      setmarginCounterDiv = _useState12[1];\n\n  function setTouchableOpacity() {\n    setcambioTocco(!cambioTocco);\n\n    if (cambioTocco == true) {\n      console.log(\"true\");\n      setstatoFlex(\"row\");\n      setstatoFlexAlign(\"center\");\n      setmarginCounter(20);\n      setState(2);\n      setmarginCounterDiv(0);\n    }\n\n    if (cambioTocco == false) {\n      console.log(\"False\");\n      setstatoFlex(\"column\");\n      setstatoFlexAlign(\"space-evenly\");\n      setmarginCounter(0);\n      setState(1);\n      setmarginCounterDiv(70);\n      Animated.timing(translateRight, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: false\n      }).start(translateRight.resetAnimation());\n      Animated.timing(opacityRight, {\n        toValue: 0.5,\n        duration: 400,\n        useNativeDriver: false\n      }).start(opacityRight.resetAnimation());\n    }\n  }\n\n  var _useState13 = useState(new Animated.Value(30)),\n      _useState14 = _slicedToArray(_useState13, 1),\n      translateRight = _useState14[0];\n\n  var _useState15 = useState(new Animated.Value(0)),\n      _useState16 = _slicedToArray(_useState15, 1),\n      opacityRight = _useState16[0];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      deleteItem = _useState18[0],\n      setdeleteItem = _useState18[1];\n\n  return _jsxs(View, {\n    style: {\n      height: 80,\n      width: 352,\n      backgroundColor: 'white',\n      margin: 5,\n      borderRadius: 15,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: statoFlexAlign,\n      position: 'relative'\n    },\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setTouchableOpacity();\n      },\n      style: {\n        backgroundColor: 'yellow',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 50,\n            marginRight: 20\n          },\n          children: \"2\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20\n          },\n          children: \"Pane cinese\"\n        })]\n      })\n    }), state == 1 ? _jsx(Animated.View, {\n      style: {\n        height: 80,\n        width: 50,\n        backgroundColor: '#D62A2A',\n        borderTopRightRadius: 15,\n        borderBottomRightRadius: 15,\n        justifyContent: 'center',\n        alignItems: 'center',\n        transform: [{\n          translateX: translateRight\n        }],\n        opacity: opacityRight,\n        position: 'absolute',\n        right: 0\n      },\n      children: _jsx(FontAwesome5, {\n        onPress: function onPress() {\n          return setdeleteItem(!s);\n        },\n        name: \"trash-alt\",\n        size: 26,\n        color: \"white\"\n      })\n    }) : null]\n  });\n};\n\nexport default DeleteItem;","map":{"version":3,"sources":["/Users/matteooriggi/SushiSystem/app/components/deleteItem.js"],"names":["Svg","Path","AppLoading","Ionicons","AntDesign","useState","useEffect","FontAwesome5","useFonts","Antic_400Regular","DeleteItem","state","setState","statoFlex","setstatoFlex","statoFlexAlign","setstatoFlexAlign","cambioTocco","setcambioTocco","marginCounter","setmarginCounter","marginCounterDiv","setmarginCounterDiv","setTouchableOpacity","console","log","Animated","timing","translateRight","toValue","duration","useNativeDriver","start","resetAnimation","opacityRight","Value","deleteItem","setdeleteItem","height","width","backgroundColor","margin","borderRadius","display","flexDirection","justifyContent","position","alignItems","fontSize","marginRight","borderTopRightRadius","borderBottomRightRadius","transform","translateX","opacity","right","s"],"mappings":"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","sourcesContent":["import { Image, StyleSheet, Text, View, Dimensions, TouchableOpacity, Animated, TouchableWithoutFeedback} from 'react-native';\nimport Svg, { Path } from 'react-native-svg'; //expo install react-native-svg\nimport AppLoading from 'expo-app-loading';\nimport { Ionicons, AntDesign } from '@expo/vector-icons'; \nimport { useState , useEffect} from 'react';\nimport { FontAwesome5 } from '@expo/vector-icons'; \nimport {\n    useFonts,\n    Antic_400Regular,\n} from '@expo-google-fonts/antic';\n\n\nconst DeleteItem = () =>{\n\n    const [state, setState] = useState(2);\n    const [statoFlex, setstatoFlex] = useState(\"row\"); //setState('center');\n    const [statoFlexAlign, setstatoFlexAlign] = useState(\"center\");\n    const [cambioTocco, setcambioTocco] = useState(false);\n    const [marginCounter, setmarginCounter] = useState(20);\n    const [marginCounterDiv, setmarginCounterDiv] = useState(0);\n\n    function setTouchableOpacity (){\n        setcambioTocco(!cambioTocco);\n        if(cambioTocco == true){\n            console.log(\"true\")\n            setstatoFlex(\"row\");\n            setstatoFlexAlign(\"center\");\n            setmarginCounter(20);\n            setState(2);\n            setmarginCounterDiv(0)\n        }\n        if(cambioTocco == false){\n            console.log(\"False\")\n            setstatoFlex(\"column\");\n            setstatoFlexAlign(\"space-evenly\");\n            setmarginCounter(0);\n            setState(1);\n            setmarginCounterDiv(70)\n\n            Animated.timing(translateRight,{\n                toValue:0,\n                duration: 200,\n                useNativeDriver: false,\n            }).start(translateRight.resetAnimation());\n            Animated.timing(opacityRight,{\n                toValue:0.5,\n                duration: 400,\n                useNativeDriver: false,\n            }).start(opacityRight.resetAnimation());\n            \n        }\n    }\n\n    //animations\n    const [translateRight] = useState(new Animated.Value(30));\n    const [opacityRight] = useState(new Animated.Value(0));\n    \n    const [deleteItem, setdeleteItem] = useState(true);\n   \n\n\n    \n    return(\n        \n        <View style={{height:80, width:352, backgroundColor:'white', margin:5, borderRadius:15, display:'flex', flexDirection:'row', justifyContent:statoFlexAlign, position:'relative'}}>\n            \n            \n                <TouchableWithoutFeedback onPress={ () => setTouchableOpacity()} style={{backgroundColor:'yellow', justifyContent:'center', alignItems:'center'}}>\n                    <View style={{justifyContent:'center', alignItems:'center', flexDirection:'row'}}>\n                        <Text style={{fontSize:50, marginRight:20}}>2</Text>\n                        <Text style={{fontSize:20}}>Pane cinese</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            {state == 1 ? (<Animated.View style={{height:80, width:50, backgroundColor:'#D62A2A', borderTopRightRadius:15,borderBottomRightRadius:15,  justifyContent:'center', alignItems:'center', transform:[{translateX:translateRight}], opacity:opacityRight, position:'absolute', right:0}}><FontAwesome5 onPress={()=>setdeleteItem(!s)} name=\"trash-alt\" size={26} color=\"white\" /></Animated.View>):(null)}\n        </View>\n        \n    );\n}\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}